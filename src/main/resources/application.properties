server.port = 8080

spring.datasource.url = jdbc:mysql://localhost:3306/demo?allowKeyRetrieval&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = root

spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.jpa.database-platform = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update

server.servlet.session.timeout = 5s

site.base.url.http = http://localhost:8080

#secure token configuration 60 * 60 * 8 // setting as 8 hours,
jdj.secure.token.validity = 28800

#### Brute force attack counter, you can also handle this through a generic database back configuration ###############
jdj.security.failedlogin.count = 3
jdj.brute.force.cache.max = 1000

########## SMTP configuration to send out emails ##########
####### Make sure to use the correct SMTP configurations #######
logging.level.org.springframework.mail = DEBUG
spring.mail.host = smtp.gmail.com
spring.mail.port = 587
spring.mail.username = bodya2015okt@gmail.com
spring.mail.password = iqxwroueqapperev

# Other properties
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.connectiontimeout = 5000
spring.mail.properties.mail.smtp.timeout = 5000
spring.mail.properties.mail.smtp.writetimeout = 5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable = true

# SSL, post 465
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory